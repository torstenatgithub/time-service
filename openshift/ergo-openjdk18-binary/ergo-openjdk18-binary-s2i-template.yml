apiVersion: v1
kind: Template
labels: 
  app: "${APPLICATION_NAME}"
  template: ergo-openjdk18-binary-s2i
message: "A new java application has been created in your project."
metadata: 
  name: ergo-openjdk18-binary-s2i
  annotations: 
    description: "This template defines resources needed to run OpenJDK Java 8 based applications."
    iconClass: icon-openjdk
    tags: "java,ergo"
    openshift.io/display-name: "OpenJDK 8"
    openshift.io/provider-display-name: ITERGO
    openshift.io/documentation-url: "https://access.redhat.com/documentation/en/"
    openshift.io/long-description: "Based on the OpenJDK 8 template by Red Hat, modified for binary source with custom builder image. For more information about using this template, see https://github.com/jboss-openshift/application-templates."
    openshift.io/support-url: "https://access.redhat.com"
    version: 1.0
objects: 
  - apiVersion: v1
    kind: Service
    metadata: 
      annotations: 
        description: "The application's http port."
      name: "${APPLICATION_NAME}"
    spec: 
      ports: 
        - 
          name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector: 
        deploymentconfig: "${APPLICATION_NAME}"
      sessionAffinity: None
      type: ClusterIP
  - apiVersion: v1
    kind: Route
    metadata: 
      annotations: 
        description: "Route for application's http service."
      name: "${APPLICATION_NAME}"
    spec: 
      host: "${HOSTNAME_HTTP}"
      to: 
        kind: Service
        name: "${APPLICATION_NAME}"
  - apiVersion: v1
    kind: ImageStream
    metadata: 
      annotations: 
        description: "Target ImageStream for the application's build."
      name: "${APPLICATION_NAME}"
    spec:
      dockerImageRepository: "index.docker.io/v1/torstenatdocker/${APPLICATION_NAME}"
      lookupPolicy:
        local: false
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: "index.docker.io/v1/torstenatdocker/${APPLICATION_NAME}"
  - apiVersion: v1
    kind: BuildConfig
    metadata: 
      annotations: 
        description: "BuildConfig for the application."
      name: "${APPLICATION_NAME}"
    spec: 
      output: 
        to: 
          kind: ImageStreamTag
          name: "${APPLICATION_NAME}:latest"
      runPolicy: Serial
      source: 
        type: Binary
      strategy: 
        sourceStrategy: 
          forcePull: true
          from: 
            kind: ImageStreamTag
            name: "ergo-openjdk18-binary:latest"
            namespace: "${SOURCE_IMAGE_STREAM_NAMESPACE}"
        type: Source
      triggers: 
        - github: 
            secret: "${GITHUB_WEBHOOK_SECRET}"
          type: GitHub
        - generic: 
            secret: "${GENERIC_WEBHOOK_SECRET}"
          type: Generic
        - imageChange: {}
          type: ImageChange
        - type: ConfigChange
  - apiVersion: v1
    kind: DeploymentConfig
    metadata: 
      annotations: 
        description: "DeploymentConfig for the application."
      name: "${APPLICATION_NAME}"
    spec: 
      replicas: 1
      selector: 
        deploymentconfig: "${APPLICATION_NAME}"
      strategy: 
        type: Rolling
      template: 
        metadata: 
          labels: 
            app: "${APPLICATION_NAME}"
            deploymentconfig: "${APPLICATION_NAME}"
            name: "${APPLICATION_NAME}"
          name: "${APPLICATION_NAME}"
        spec: 
          containers: 
            - env: []
              image: "${APPLICATION_NAME}"
              imagePullPolicy: Always
              name: "${APPLICATION_NAME}"
              ports: 
                - containerPort: 8080
                  name: http
                  protocol: TCP
          terminationGracePeriodSeconds: 75
      triggers: 
        - imageChangeParams: 
            automatic: true
            containerNames: 
              - "${APPLICATION_NAME}"
            from: 
              kind: ImageStreamTag
              name: "${APPLICATION_NAME}:latest"
          type: ImageChange
        - type: ConfigChange
parameters: 
  - description: "The name for the application."
    displayName: "Application Name"
    name: APPLICATION_NAME
    required: true
    value: openjdk-app
  - description: "Custom hostname for http service route. Leave blank for default hostname, e.g. <application-name>-<project>.<default-domain-suffix>"
    displayName: "Custom http Route Hostname"
    name: HOSTNAME_HTTP
    required: false
    value: ""
  - description: "GitHub trigger secret."
    displayName: "Github Webhook Secret"
    from: "[a-zA-Z0-9]{12}"
    generate: expression
    name: GITHUB_WEBHOOK_SECRET
    required: true
  - description: "Generic build trigger secret."
    displayName: "Generic Webhook Secret"
    from: "[a-zA-Z0-9]{12}"
    generate: expression
    name: GENERIC_WEBHOOK_SECRET
    required: true
  - description: "Namespace in which the ImageStreams for builder images are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project."
    displayName: "ImageStream Namespace"
    name: SOURCE_IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
